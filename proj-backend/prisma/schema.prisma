// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ──────────────────────────────────────────────────────────────
// Enums
// ──────────────────────────────────────────────────────────────

enum Role {
  ADMIN
  CUSTOMER
  SELLER   // added to match FE wording; keep SALES for back-compat
  SALES
}

enum Status {
  ACTIVE
  PENDING
  SUSPENDED
}

// ──────────────────────────────────────────────────────────────
// Models
// ──────────────────────────────────────────────────────────────

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  password          String
  role              Role      @default(CUSTOMER)
  status            Status    @default(ACTIVE)

  // Role-specific IDs
  customerId        String?   @unique
  sellerId          String?   @unique

  // Common fields
  firstName         String?
  lastName          String?
  phone             String?

  // Legacy single-line address (kept for compatibility)
  address           String?

  // NEW: structured address for the profile UI (line1/line2/city/zip/country)
  addressJson       Json?

  // Avatar / profile image
  profilePicUrl     String?

  // Seller-specific fields (kept)
  storeName         String?
  businessType      String?
  pharmacyLicense   String?
  licenseDocUrl     String?
  taxId             String?
  storeLogoUrl      String?
  businessAddress   String?
  ownerIdProofUrl   String?
  proofOfAddressUrl String?
  medicalCertUrl    String?
  bankName          String?
  accountHolder     String?
  accountNumber     String?

  // Relations
  orders            Order[]

  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  // Helpful index for admin filters/search
  @@index([role, status], map: "idx_user_role_status")
}

model Order {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  totalAmount Float
  status      String

  @@index([userId], map: "idx_order_userId")
}
